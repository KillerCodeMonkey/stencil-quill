{"version":3,"names":["QuillEditorComponent","hostRef","this","format","debug","placeholder","styles","theme","customToolbarPosition","defaultEmptyValue","defaultModules","toolbar","header","list","script","indent","direction","size","color","slice","background","font","align","prototype","setEditorContent","value","contents","quillEditor","clipboard","convert","setContents","setText","JSON","parse","e","getEditorContent","text","getText","content","getContents","html","getSemanticHTML","isEmptyValue","stringify","componentDidLoad","_this","editorElement","document","createElement","setAttribute","modules","toolbarElem","wrapperElement","querySelector","prepend","append","Quill","readOnly","formats","bounds","body","styles_1","Object","keys","forEach","key","style","setProperty","clear","editorChangeEvent","on","event","current","old","source","editorChange","emit","delta","editor","oldDelta","oldRange","range","selectionChangeEvent","editorBlur","editorFocus","editorSelectionChange","textChangeEvent","editorContentChange","setTimeout","editorInit","disconnectedCallback","removeListener","updateContent","newValue","editorContents","indexOf","changed","newContentString","_a","updateReadOnly","oldValue","enable","updatePlaceholder","root","dataset","updateStyle","value_1","render","h","Host","name","quillViewCss","QuillViewStyle0","QuillViewComponent","strict","styles_2","classList","add","value_2","ref","el","quillViewHtmlCss","QuillViewHtmlStyle0","QuillViewHTMLComponent","themeClass","updateTheme","concat","classes","class","innerHTML"],"sources":["src/components/quill-editor/quill-editor.tsx","src/components/quill-view/quill-view.css?tag=quill-view&encapsulation=scoped","src/components/quill-view/quill-view.tsx","src/components/quill-view-html/quill-view-html.css?tag=quill-view-html&encapsulation=scoped","src/components/quill-view-html/quill-view-html.tsx"],"sourcesContent":["import { h, Component, ComponentDidLoad, Element, Event, EventEmitter, Prop, Watch, Host } from '@stencil/core';\n\ndeclare const Quill: any;\n\n@Component({\n  tag: 'quill-editor',\n  scoped: true,\n  shadow: false,\n})\nexport class QuillEditorComponent implements ComponentDidLoad {\n  @Event() editorInit: EventEmitter<any>;\n  @Event() editorChange: EventEmitter<\n    | {\n        editor: any;\n        event: 'text-change';\n        content: any;\n        text: string;\n        html: string;\n        delta: any;\n        oldDelta: any;\n        source: string;\n      }\n    | {\n        editor: any;\n        event: 'selection-change';\n        range: any;\n        oldRange: any;\n        source: string;\n      }\n  >;\n  @Event() editorContentChange: EventEmitter<{\n    editor: any;\n    content: any;\n    text: string;\n    html: string;\n    delta: any;\n    oldDelta: any;\n    source: string;\n  }>;\n  @Event() editorSelectionChange: EventEmitter<{\n    editor: any;\n    range: any;\n    oldRange: any;\n    source: string;\n  }>;\n  @Event() editorFocus: EventEmitter<{\n    editor: any;\n    source: string;\n  }>;\n  @Event() editorBlur: EventEmitter<{\n    editor: any;\n    source: string;\n  }>;\n\n  @Element() wrapperElement: HTMLElement;\n\n  @Prop() format: 'html' | 'text' | 'json' = 'html';\n  @Prop() bounds: HTMLElement | string;\n  @Prop() content: string;\n  @Prop() debug: string = 'warn';\n  @Prop() formats: string[];\n  @Prop() modules?: string;\n  @Prop() placeholder: string = 'Insert text here ...';\n  @Prop() readOnly: boolean;\n  @Prop() styles: string = '{}';\n  @Prop() theme: string = 'snow';\n  @Prop() customToolbarPosition: 'top' | 'bottom' = 'top';\n  @Prop() defaultEmptyValue: any = null\n\n  quillEditor: any;\n  editorElement: HTMLDivElement | HTMLPreElement;\n  private defaultModules = {\n    toolbar: [\n      ['bold', 'italic', 'underline', 'strike'], // toggled buttons\n      ['blockquote', 'code-block'],\n\n      [{ header: 1 }, { header: 2 }], // custom button values\n      [{ list: 'ordered' }, { list: 'bullet' }],\n      [{ script: 'sub' }, { script: 'super' }], // superscript/subscript\n      [{ indent: '-1' }, { indent: '+1' }], // outdent/indent\n      [{ direction: 'rtl' }], // text direction\n\n      [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\n\n      [{ color: [].slice() }, { background: [].slice() }], // dropdown with defaults from theme\n      [{ font: [].slice() }],\n      [{ align: [].slice() }],\n\n      ['clean'], // remove formatting button\n\n      ['link', 'image', 'video'], // link and image, video\n    ],\n  };\n\n  selectionChangeEvent: any;\n  textChangeEvent: any;\n  editorChangeEvent: any;\n\n  setEditorContent(value: any) {\n    if (this.format === 'html') {\n      const contents = this.quillEditor.clipboard.convert(value);\n      this.quillEditor.setContents(contents, 'api');\n    } else if (this.format === 'text') {\n      this.quillEditor.setText(value, 'api');\n    } else if (this.format === 'json') {\n      try {\n        this.quillEditor.setContents(JSON.parse(value), 'api');\n      } catch (e) {\n        this.quillEditor.setText(value, 'api');\n      }\n    } else {\n      this.quillEditor.setText(value, 'api');\n    }\n  }\n\n  getEditorContent() {\n    const text = this.quillEditor.getText();\n    const content = this.quillEditor.getContents();\n\n    let html: string | null = this.quillEditor.getSemanticHTML();\n    if (this.isEmptyValue(html)) {\n      html = this.defaultEmptyValue;\n    }\n\n    if (this.format === 'html') {\n      return html;\n    } else if (this.format === 'text') {\n      return text;\n    } else if (this.format === 'json') {\n      try {\n        return JSON.stringify(content);\n      } catch (e) {\n        return text;\n      }\n    } else {\n      return text;\n    }\n  }\n\n  componentDidLoad() {\n    this.editorElement = document.createElement('div');\n    this.editorElement.setAttribute('quill-editor', '');\n\n    let modules: any = this.modules ? JSON.parse(this.modules) : this.defaultModules;\n\n    const toolbarElem = this.wrapperElement.querySelector('[slot=\"quill-toolbar\"]');\n    if (toolbarElem) {\n      modules['toolbar'] = toolbarElem;\n      if (this.customToolbarPosition === 'bottom') {\n        this.wrapperElement.prepend(this.editorElement);\n      } else {\n        this.wrapperElement.append(this.editorElement);\n      }\n    } else {\n      this.wrapperElement.append(this.editorElement);\n    }\n\n    this.quillEditor = new Quill(this.editorElement, {\n      debug: this.debug,\n      modules: modules,\n      placeholder: this.placeholder,\n      readOnly: this.readOnly || false,\n      theme: this.theme || 'snow',\n      formats: this.formats,\n      bounds: this.bounds ? (this.bounds === 'self' ? this.editorElement : this.bounds) : document.body\n    });\n\n    if (this.styles) {\n      const styles = JSON.parse(this.styles);\n      Object.keys(styles).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, styles[key]);\n      });\n    }\n\n    if (this.content) {\n      this.setEditorContent(this.content);\n\n      this.quillEditor['history'].clear();\n    }\n\n    this.editorChangeEvent = this.quillEditor.on(\n      'editor-change',\n      (event: 'text-change' | 'selection-change', current: any | Range | null, old: any | Range | null, source: string): void => {\n        // only emit changes emitted by user interactions\n\n        if (event === 'text-change') {\n          const text = this.quillEditor.getText();\n          const content = this.quillEditor.getContents();\n\n          let html: string | null = this.quillEditor.getSemanticHTML();\n          if (this.isEmptyValue(html)) {\n            html = null;\n          }\n\n          this.editorChange.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text,\n          });\n        } else {\n          this.editorChange.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source,\n          });\n        }\n      },\n    );\n\n    this.selectionChangeEvent = this.quillEditor.on('selection-change', (range: any, oldRange: any, source: string) => {\n      if (range === null) {\n        this.editorBlur.emit({\n          editor: this.quillEditor,\n          source,\n        });\n      } else if (oldRange === null) {\n        this.editorFocus.emit({\n          editor: this.quillEditor,\n          source,\n        });\n      }\n\n      this.editorSelectionChange.emit({\n        editor: this.quillEditor,\n        range,\n        oldRange,\n        source,\n      });\n    });\n\n    this.textChangeEvent = this.quillEditor.on('text-change', (delta: any, oldDelta: any, source: string) => {\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n\n      let html: string | null = this.quillEditor.getSemanticHTML();\n      if (this.isEmptyValue(html)) {\n        html = null;\n      }\n\n      this.editorContentChange.emit({\n        editor: this.quillEditor,\n        content,\n        delta,\n        html,\n        oldDelta,\n        source,\n        text,\n      });\n    });\n\n    setTimeout(() => {\n      this.editorInit.emit(this.quillEditor);\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.selectionChangeEvent) {\n      this.selectionChangeEvent.removeListener('selection-change');\n    }\n    if (this.textChangeEvent) {\n      this.textChangeEvent.removeListener('text-change');\n    }\n    if (this.editorChangeEvent) {\n      this.editorChangeEvent.removeListener('editor-change');\n    }\n  }\n\n  @Watch('content')\n  updateContent(newValue: any): void {\n    if (!this.quillEditor) {\n      return;\n    }\n    const editorContents = this.getEditorContent();\n\n    if (['text', 'html', 'json'].indexOf(this.format) > -1 && newValue === editorContents) {\n      return null;\n    } else {\n      let changed = false;\n      try {\n        const newContentString = JSON.stringify(newValue);\n        changed = JSON.stringify(editorContents) !== newContentString;\n      } catch {\n        return null;\n      }\n\n      if (!changed) {\n        return null;\n      }\n    }\n\n    this.setEditorContent(newValue);\n  }\n\n  @Watch('readOnly')\n  updateReadOnly(newValue: boolean, oldValue: boolean): void {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (newValue !== oldValue) {\n      this.quillEditor.enable(!newValue);\n    }\n  }\n\n  @Watch('placeholder')\n  updatePlaceholder(newValue: string, oldValue: string): void {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (newValue !== oldValue) {\n      this.quillEditor.root.dataset.placeholder = newValue;\n    }\n  }\n\n  @Watch('styles')\n  updateStyle(newValue: string, oldValue: string): void {\n    if (!this.editorElement) {\n      return;\n    }\n\n    if (oldValue) {\n      const old = JSON.parse(oldValue);\n      Object.keys(old).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, '');\n      });\n    }\n    if (newValue) {\n      const value = JSON.parse(newValue);\n      Object.keys(value).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, value[key]);\n      });\n    }\n  }\n\n  render() {\n    <Host>\n      <slot name=\"quill-toolbar\" quill-toolbar=\"\" />\n    </Host>;\n  }\n\n  private isEmptyValue(html: string | null) {\n    return html === '<p></p>' || html === '<div></div>' || html === '<p><br></p>' || html === '<div><br></div>'\n  }\n}\n",".ql-container.quill-view {\n  border: 0;\n}\n","import { ComponentDidLoad } from '@stencil/core';\nimport { h, Component, Element, Prop, Watch } from '@stencil/core';\n\ndeclare const Quill: any;\n\n@Component({\n  tag: 'quill-view',\n  scoped: true,\n  shadow: false,\n  styleUrl: './quill-view.css',\n})\nexport class QuillViewComponent implements ComponentDidLoad {\n  @Element() wrapperElement: HTMLElement;\n\n  @Prop() format: 'html' | 'text' | 'json' = 'html';\n  @Prop() content: string;\n  @Prop() debug: string = 'warn';\n  @Prop() formats: string[];\n  @Prop() modules?: string;\n  @Prop() strict: boolean = true;\n  @Prop() styles: string = '{}';\n  @Prop() theme: string = 'snow';\n  @Prop() defaultEmptyValue: any = null\n\n  quillEditor: any;\n  editorElement: HTMLDivElement;\n\n  setEditorContent(value: any) {\n    if (!this.quillEditor) {\n      return null\n    }\n    if (this.format === 'html') {\n      const contents = this.quillEditor.clipboard.convert(value);\n      this.quillEditor.setContents(contents, 'api');\n    } else if (this.format === 'text') {\n      this.quillEditor.setText(value, 'api');\n    } else if (this.format === 'json') {\n      try {\n        this.quillEditor.setContents(JSON.parse(value), 'api');\n      } catch (e) {\n        this.quillEditor.setText(value, 'api');\n      }\n    } else {\n      this.quillEditor.setText(value, 'api');\n    }\n  }\n\n  getEditorContent() {\n    if (!this.quillEditor) {\n      return null\n    }\n    const text = this.quillEditor.getText();\n    const content = this.quillEditor.getContents();\n\n    let html: string | null = this.quillEditor.getSemanticHTML()\n    if (this.isEmptyValue(html)) {\n      html = this.defaultEmptyValue;\n    }\n\n    if (this.format === 'html') {\n      return html;\n    } else if (this.format === 'text') {\n      return text;\n    } else if (this.format === 'json') {\n      try {\n        return JSON.stringify(content);\n      } catch (e) {\n        return text;\n      }\n    } else {\n      return text;\n    }\n  }\n\n  componentDidLoad() {\n    let modules: any = this.modules\n      ? JSON.parse(this.modules)\n      : {\n          toolbar: false,\n        };\n\n    if (modules.toolbar) {\n      modules.toolbar = false;\n    }\n\n    this.quillEditor = new Quill(this.editorElement, {\n      debug: this.debug,\n      modules: modules,\n      readOnly: true,\n      theme: this.theme || 'snow',\n      formats: this.formats,\n      strict: this.strict,\n    });\n\n    if (this.styles) {\n      const styles = JSON.parse(this.styles);\n      Object.keys(styles).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, styles[key]);\n      });\n    }\n\n    this.editorElement.classList.add('quill-view');\n\n    if (this.content) {\n      this.setEditorContent(this.content);\n\n      this.quillEditor['history'].clear();\n    }\n  }\n\n  @Watch('styles')\n  updateStyle(newValue: string, oldValue: string): void {\n    if (!this.editorElement) {\n      return;\n    }\n\n    if (oldValue) {\n      const old = JSON.parse(oldValue);\n      Object.keys(old).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, '');\n      });\n    }\n    if (newValue) {\n      const value = JSON.parse(newValue);\n      Object.keys(value).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, value[key]);\n      });\n    }\n  }\n\n  @Watch('content')\n  updateContent(newValue: any): void {\n    if (!this.quillEditor) {\n      return null\n    }\n    const editorContents = this.getEditorContent();\n\n    if (['text', 'html', 'json'].indexOf(this.format) > -1 && newValue === editorContents) {\n      return null;\n    } else {\n      let changed = false;\n      try {\n        const newContentString = JSON.stringify(newValue);\n        changed = JSON.stringify(editorContents) !== newContentString;\n      } catch {\n        return null;\n      }\n\n      if (!changed) {\n        return null;\n      }\n    }\n\n    this.setEditorContent(newValue);\n  }\n  \n  private isEmptyValue(html: string | null) {\n    return html === '<p></p>' || html === '<div></div>' || html === '<p><br></p>' || html === '<div><br></div>'\n  }\n\n  render() {\n    return (<div quill-element ref={(el: HTMLDivElement) => {this.editorElement = el;}}></div>)\n  }\n}\n",".ql-container.quill-view-html {\n  border: 0;\n}\n","import { h, Component, Prop, Watch } from '@stencil/core';\n\n@Component({\n  tag: 'quill-view-html',\n  scoped: true,\n  shadow: false,\n  styleUrl: './quill-view-html.css',\n})\nexport class QuillViewHTMLComponent {\n  @Prop() content: string;\n  @Prop() theme: string = 'snow';\n  private themeClass: string = 'ql-snow';\n\n  @Watch('theme')\n  updateTheme(newValue: string): void {\n    this.themeClass = `ql-${newValue || 'snow'}`;\n  }\n\n  render() {\n    const classes = `ql-container ${this.themeClass} quill-view-html`;\n    return (\n      <div class={classes}>\n        <div class=\"ql-editor\" innerHTML={this.content}></div>\n      </div>\n    );\n  }\n}\n"],"mappings":"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","ignoreList":[]}