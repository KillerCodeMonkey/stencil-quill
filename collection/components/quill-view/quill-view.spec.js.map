{"version":3,"file":"quill-view.spec.js","sourceRoot":"","sources":["../../../src/components/quill-view/quill-view.spec.tsx"],"names":[],"mappings":"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","sourcesContent":["import { newSpecPage, SpecPage } from '@stencil/core/testing';\nimport { QuillViewComponent } from './quill-view';\n\nclass Quill {\n  options = {};\n  editorElement;\n\n  constructor(el: HTMLElement, options: any) {\n    el.appendChild(document.createElement('div'));\n    this.options = options;\n    this.editorElement = el;\n  }\n\n  history = {\n    clear: () => {},\n  };\n  clipboard = {\n    convert: () => {},\n  };\n  setContents() {}\n  setText() {}\n  getContents() {}\n  getText() {}\n}\n\n(global as any).Quill = Quill;\n\ndescribe('QuillViewComponent', () => {\n  let page: SpecPage;\n  let component: QuillViewComponent;\n\n  beforeEach(async () => {\n    page = await newSpecPage({\n      components: [QuillViewComponent],\n      html: `<quill-view styles='{\\\"height\\\": \\\"200px\\\"}' content=\"<p>Test</p>\" modules='{\\\"toolbar\\\":true}'></quill-view>`,\n    });\n\n    component = await page.rootInstance;\n  });\n\n  afterEach(() => jest.restoreAllMocks())\n\n  it('renders and sets default snow theme class', () => {\n    expect(page.root).toEqualHtml(`\n      <quill-view content=\"<p>Test</p>\" modules=\"{&quot;toolbar&quot;:true}\" styles=\"{&quot;height&quot;: &quot;200px&quot;}\">\n        <div class=\"quill-view\" quill-element=\"\" style=\"height: 200px;\">\n          <div></div>\n        </div>\n      </quill-view>\n    `);\n\n    expect(component.theme).toEqual('snow');\n    expect(component.content).toBe('<p>Test</p>');\n    expect(component.format).toEqual('html');\n    expect(component.debug).toEqual('warn');\n    expect(component.styles).toEqual('{\"height\": \"200px\"}');\n    expect(component.strict).toBe(true);\n    expect(component.preserveWhitespace).toBe(false);\n    expect(component.modules).toEqual('{\"toolbar\":true}');\n\n    expect(component.quillEditor.options).toEqual({ debug: 'warn', formats: undefined, modules: { toolbar: false }, readOnly: true, strict: true, theme: 'snow' });\n  });\n\n  it('renders pre tag if preserve whitespace', async () => {\n    component.preserveWhitespace = true;\n\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <quill-view content=\"<p>Test</p>\" modules=\"{&quot;toolbar&quot;:true}\" styles=\"{&quot;height&quot;: &quot;200px&quot;}\">\n        <pre quill-element=\"\"></pre>\n      </quill-view>\n    `);\n  });\n\n  it('renders styles changes', async () => {\n    component.styles = '{\"height\": \"300px\"}';\n\n    await page.waitForChanges();\n\n    expect(page.root).toEqualHtml(`\n      <quill-view content=\"<p>Test</p>\" modules=\"{&quot;toolbar&quot;:true}\" styles=\"{&quot;height&quot;: &quot;200px&quot;}\">\n        <div class=\"quill-view\" quill-element=\"\" style=\"height: 300px;\">\n          <div></div>\n        </div>\n      </quill-view>\n    `);\n  });\n\n  describe('Formats', () => {\n    describe('json', () => {\n      it('renders json string', async () => {\n        const spy = jest.spyOn(component.quillEditor, 'setContents');\n\n        component.format = 'json';\n        component.content = JSON.stringify([\n          {\n            insert: 'Hallo',\n          },\n        ]);\n\n        await page.waitForChanges();\n\n        expect(spy).toHaveBeenCalledWith([{ insert: 'Hallo' }], 'api');\n      });\n    });\n\n    describe('html', () => {\n      it('renders html string', async () => {\n        const spy = jest.spyOn(component.quillEditor, 'setContents');\n        const clipboardSpy = jest.spyOn(component.quillEditor.clipboard, 'convert').mockReturnValue('<p>Hallo</p>');\n\n        component.format = 'html';\n        component.content = '<p>Hallo</p>';\n\n        await page.waitForChanges();\n\n        expect(clipboardSpy).toHaveBeenCalledWith('<p>Hallo</p>');\n        expect(spy).toHaveBeenCalledWith('<p>Hallo</p>', 'api');\n      });\n    });\n\n    describe('text', () => {\n      it('renders plain text', async () => {\n        const spy = jest.spyOn(component.quillEditor, 'setText');\n\n        component.format = 'text';\n        component.content = 'Hallo';\n\n        await page.waitForChanges();\n\n        expect(spy).toHaveBeenCalledWith('Hallo', 'api');\n      });\n    });\n  });\n\n  describe('#updateContent', () => {\n    it('returns null if known format but no content change', () => {\n      jest.spyOn(component, 'getEditorContent').mockReturnValue('');\n      const setSpy = jest.spyOn(component, 'setEditorContent');\n\n      expect(component.updateContent('')).toBe(null);\n      expect(setSpy).not.toHaveBeenCalled();\n    });\n\n    it('returns null if JSON.stringify of new value failes', () => {\n      const setSpy = jest.spyOn(component, 'setEditorContent');\n      jest.spyOn(JSON, 'stringify').mockImplementation(() => { throw 'FAIL!' });\n\n      expect(component.updateContent({ test: 1 })).toBe(null);\n      expect(setSpy).not.toHaveBeenCalled();\n    });\n\n    it('returns null if JSON.stringify of new value is the same as the current', () => {\n      const setSpy = jest.spyOn(component, 'setEditorContent');\n      jest.spyOn(JSON, 'stringify').mockReturnValue('');\n\n      expect(component.updateContent('asdf')).toBe(null);\n      expect(setSpy).not.toHaveBeenCalled();\n    });\n\n    it('calls setContent if everything is fine', () => {\n      const setSpy = jest.spyOn(component, 'setEditorContent');\n\n      expect(component.updateContent('asdf')).toBe(undefined);\n      expect(setSpy).toHaveBeenCalledWith('asdf');\n    });\n  });\n\n  describe('#updateStyles', () => {\n    it('does nothing if not editorElement', () => {\n      const spy = jest.spyOn(component.editorElement.style, 'setProperty');\n\n      component.editorElement = null;\n      component.updateStyle('', '');\n      expect(spy).not.toHaveBeenCalled();\n    });\n\n    it('removes old styles', () => {\n      const spy = jest.spyOn(component.editorElement.style, 'setProperty');\n\n      component.updateStyle('', '{\"height\": \"12px\"}');\n      expect(spy).toHaveBeenCalledWith('height', '');\n    });\n\n    it('adds new styles', () => {\n      const spy = jest.spyOn(component.editorElement.style, 'setProperty');\n\n      component.updateStyle('{\"height\": \"12px\"}', '');\n      expect(spy).toHaveBeenCalledWith('height', '12px');\n    });\n  });\n\n  describe('#setEditorContent', () => {\n    describe('format: html', () => {\n      it('converts html and sets content', () => {\n        jest.spyOn(component.quillEditor.clipboard, 'convert').mockReturnValue([{ insert: '1' }]);\n        const spy = jest.spyOn(component.quillEditor, 'setContents');\n\n        component.format = 'html';\n        component.setEditorContent('');\n\n        expect(spy).toHaveBeenCalledWith([{ insert: '1' }], 'api');\n      });\n    });\n\n    describe('format: text', () => {\n      it('sets text', () => {\n        const spy = jest.spyOn(component.quillEditor, 'setText');\n\n        component.format = 'text';\n        component.setEditorContent('test');\n\n        expect(spy).toHaveBeenCalledWith('test', 'api');\n      });\n    });\n\n    describe('format: json', () => {\n      it('sets json', () => {\n        const spy = jest.spyOn(component.quillEditor, 'setContents');\n\n        component.format = 'json';\n        component.setEditorContent('{\"insert\":\"1\"}');\n\n        expect(spy).toHaveBeenCalledWith({ insert: '1' }, 'api');\n      });\n\n      it('sets value as text, if json not parsable', () => {\n        const spy = jest.spyOn(component.quillEditor, 'setText');\n\n        component.format = 'json';\n        component.setEditorContent('{\"insert\":');\n\n        expect(spy).toHaveBeenCalledWith('{\"insert\":', 'api');\n      });\n    });\n\n    describe('unkown format', () => {\n      it('sets text', () => {\n        const spy = jest.spyOn(component.quillEditor, 'setText');\n\n        component.format = 'test' as any;\n        component.setEditorContent('test');\n\n        expect(spy).toHaveBeenCalledWith('test', 'api');\n      });\n    });\n  });\n\n  describe('#getEditorContent', () => {\n    describe('format: html', () => {\n      it('p with br or div with br returns empty string', () => {\n        component.quillEditor.editorElement.children[0].innerHTML = '<div><br/></div>';\n        component.format = 'html';\n\n        expect(component.getEditorContent()).toEqual('');\n      });\n\n      it('returns html', () => {\n        component.quillEditor.editorElement.children[0].innerHTML = '<div><p>asdf</p><br/></div>';\n        component.format = 'html';\n\n        expect(component.getEditorContent()).toEqual('<div><p>asdf</p><br></div>');\n      });\n    });\n\n    describe('format: text', () => {\n      it('returns text', () => {\n        const spy = jest.spyOn(component.quillEditor, 'getText').mockReturnValue('test');\n\n        component.format = 'text';\n\n        expect(component.getEditorContent()).toEqual('test');\n        expect(spy).toHaveBeenCalledWith();\n      });\n    });\n\n    describe('format: json', () => {\n      it('returns json', () => {\n        const spy = jest.spyOn(component.quillEditor, 'getContents').mockReturnValue([{ insert: '1' }]);\n\n        component.format = 'json';\n\n        expect(component.getEditorContent()).toEqual(JSON.stringify([{ insert: '1' }]));\n        expect(spy).toHaveBeenCalled();\n      });\n\n      it('returns value as text, if json not parsable', () => {\n        const spy = jest.spyOn(component.quillEditor, 'getText').mockReturnValue('test');\n        jest.spyOn(JSON, 'stringify').mockImplementation(() => { throw 'FAIL!' });\n\n        component.format = 'json';\n\n        expect(component.getEditorContent()).toEqual('test');\n        expect(spy).toHaveBeenCalled();\n      });\n    });\n\n    describe('unkown format', () => {\n      it('returns text', () => {\n        const spy = jest.spyOn(component.quillEditor, 'getText').mockReturnValue('test');\n\n        component.format = 'test' as any;\n\n        expect(component.getEditorContent()).toEqual('test');\n        expect(spy).toHaveBeenCalled();\n      });\n    });\n  });\n\n  describe('#componentDidLoad', () => {\n    describe('modules', () => {\n      it('default modules - toolbar - false', () => {\n        component.modules = undefined;\n        component.componentDidLoad();\n\n        expect(component.quillEditor.options.modules).toEqual({\n          toolbar: false,\n        });\n      });\n\n      it('force toolbar false for custom modules', () => {\n        component.modules = `{\n          \"toolbar\": true,\n          \"test\": {}\n        }`;\n        component.componentDidLoad();\n\n        expect(component.quillEditor.options.modules).toEqual({\n          test: {},\n          toolbar: false,\n        });\n      });\n    });\n\n    describe('theme', () => {\n      it('defaults to \"snow', () => {\n        component.theme = undefined;\n        component.componentDidLoad();\n\n        expect(component.quillEditor.options.theme).toEqual('snow');\n      });\n\n      it('force toolbar false for custom modules', () => {\n        component.modules = `{\n          \"toolbar\": true,\n          \"test\": {}\n        }`;\n        component.componentDidLoad();\n\n        expect(component.quillEditor.options.modules).toEqual({\n          test: {},\n          toolbar: false,\n        });\n      });\n    });\n\n    describe('without styles and content', () => {\n      it('does nothing with styles', () => {\n        component.styles = undefined;\n        const spy = jest.spyOn(component.editorElement.style, 'setProperty');\n\n        component.componentDidLoad();\n\n        expect(spy).not.toHaveBeenCalled();\n      });\n\n      it('does not set content if nothing there', () => {\n        component.content = '';\n        const spy = jest.spyOn(component, 'setEditorContent');\n\n        component.componentDidLoad();\n\n        expect(spy).not.toHaveBeenCalled();\n      });\n    });\n  });\n});\n"]}