{"version":3,"file":"quill-view.js","sourceRoot":"","sources":["../../../src/components/quill-view/quill-view.tsx"],"names":[],"mappings":"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","sourcesContent":["import { ComponentDidLoad } from '@stencil/core';\nimport { h, Component, Element, Prop, Watch } from '@stencil/core';\n\ndeclare const Quill: any;\n\n@Component({\n  tag: 'quill-view',\n  scoped: true,\n  shadow: false,\n  styleUrl: './quill-view.css',\n})\nexport class QuillViewComponent implements ComponentDidLoad {\n  @Element() wrapperElement: HTMLElement;\n\n  @Prop() format: 'html' | 'text' | 'json' = 'html';\n  @Prop() content: string;\n  @Prop() debug: string = 'warn';\n  @Prop() formats: string[];\n  @Prop() modules?: string;\n  @Prop() strict: boolean = true;\n  @Prop() styles: string = '{}';\n  @Prop() theme: string = 'snow';\n  @Prop() defaultEmptyValue: any = null\n\n  quillEditor: any;\n  editorElement: HTMLDivElement;\n\n  setEditorContent(value: any) {\n    if (!this.quillEditor) {\n      return null\n    }\n    if (this.format === 'html') {\n      const contents = this.quillEditor.clipboard.convert(value);\n      this.quillEditor.setContents(contents, 'api');\n    } else if (this.format === 'text') {\n      this.quillEditor.setText(value, 'api');\n    } else if (this.format === 'json') {\n      try {\n        this.quillEditor.setContents(JSON.parse(value), 'api');\n      } catch (e) {\n        this.quillEditor.setText(value, 'api');\n      }\n    } else {\n      this.quillEditor.setText(value, 'api');\n    }\n  }\n\n  getEditorContent() {\n    if (!this.quillEditor) {\n      return null\n    }\n    const text = this.quillEditor.getText();\n    const content = this.quillEditor.getContents();\n\n    let html: string | null = this.quillEditor.getSemanticHTML()\n    if (this.isEmptyValue(html)) {\n      html = this.defaultEmptyValue;\n    }\n\n    if (this.format === 'html') {\n      return html;\n    } else if (this.format === 'text') {\n      return text;\n    } else if (this.format === 'json') {\n      try {\n        return JSON.stringify(content);\n      } catch (e) {\n        return text;\n      }\n    } else {\n      return text;\n    }\n  }\n\n  componentDidLoad() {\n    let modules: any = this.modules\n      ? JSON.parse(this.modules)\n      : {\n          toolbar: false,\n        };\n\n    if (modules.toolbar) {\n      modules.toolbar = false;\n    }\n\n    this.quillEditor = new Quill(this.editorElement, {\n      debug: this.debug,\n      modules: modules,\n      readOnly: true,\n      theme: this.theme || 'snow',\n      formats: this.formats,\n      strict: this.strict,\n    });\n\n    if (this.styles) {\n      const styles = JSON.parse(this.styles);\n      Object.keys(styles).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, styles[key]);\n      });\n    }\n\n    this.editorElement.classList.add('quill-view');\n\n    if (this.content) {\n      this.setEditorContent(this.content);\n\n      this.quillEditor['history'].clear();\n    }\n  }\n\n  @Watch('styles')\n  updateStyle(newValue: string, oldValue: string): void {\n    if (!this.editorElement) {\n      return;\n    }\n\n    if (oldValue) {\n      const old = JSON.parse(oldValue);\n      Object.keys(old).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, '');\n      });\n    }\n    if (newValue) {\n      const value = JSON.parse(newValue);\n      Object.keys(value).forEach((key: string) => {\n        this.editorElement.style.setProperty(key, value[key]);\n      });\n    }\n  }\n\n  @Watch('content')\n  updateContent(newValue: any): void {\n    if (!this.quillEditor) {\n      return null\n    }\n    const editorContents = this.getEditorContent();\n\n    if (['text', 'html', 'json'].indexOf(this.format) > -1 && newValue === editorContents) {\n      return null;\n    } else {\n      let changed = false;\n      try {\n        const newContentString = JSON.stringify(newValue);\n        changed = JSON.stringify(editorContents) !== newContentString;\n      } catch {\n        return null;\n      }\n\n      if (!changed) {\n        return null;\n      }\n    }\n\n    this.setEditorContent(newValue);\n  }\n  \n  private isEmptyValue(html: string | null) {\n    return html === '<p></p>' || html === '<div></div>' || html === '<p><br></p>' || html === '<div><br></div>'\n  }\n\n  render() {\n    return (<div quill-element ref={(el: HTMLDivElement) => {this.editorElement = el;}}></div>)\n  }\n}\n"]}